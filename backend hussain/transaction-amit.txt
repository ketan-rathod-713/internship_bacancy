Dirty Read - uncommited tx ki value read karna.WR conflict. read after write conflict.

Lost update - koi or update karke chala jata he me update karu usse pehle.

UnRepeatable Read problem - pehle t1 me read kiya tha, firse jab read kiya tab tak vo value change ho gayi thi. RW conflict. Write after Read conflict.

Incorrect summary problem :- lets say 4 transactions, at their different stages then this will give error if we try to find summary in between.

That's why concurrency control is needed.

Concurrency Control Technique :
Ensure consistency when tx are running concurrently in interleaved fashion.

Shedule : Set of transactions that are executed together in the system

Sa : r1(x);r2(y);w1(x);w2(y) // r1(x) means transaction 1 ne read kiya and so on.

----
Types of Shedules : 9 types
1. Serial Schedule
	- T2 will start after T1 commits or Abort.
	- No concurrency
	- One Tx is active at a time.
	- If consistency property holds then all of this tx are correct. then all possible serial sechedules are correct.
	- Number of serial schedules for T1 and T2 then T2->T1 and T1->T2
	- Total Serial Schedules : n! if n is number of transactions
	
	Io operation karte time cpu idle..
	
	
2. Serializable Schedule
	- A schedule s is said to be serializable if its effect on database is gurranted to be same as some serial schedule.
	- This means if we have n transactions then n! schedules must have same result as one of the possible serial schedule.
	- every serial schedule is serializable.
	
	It must be gurrenteed. Bychance kuch or nahi hona chahiye ha ha.
	
	This is an undecided problem. No one can write algorithm to prove that given schedule is serializable. For that i need to understand what the transaction is doing :)
	
	
	Non Serial Schedules Types (>>> n!)
1. Conflict /View Serializable  	2. Incorrect/Non serialiable 


TODO:
Concurrency control techniques must gurrantee serializable schedules.
But checking schedule serializable is undecidebale. so we have other types of schedules which are subset of serializable schedules that can be checked by CCT.

CCT will garaantee only correct schedule will run in our system but it does not garrantee that all correct scheudles will run in our system.

3. Conflict Equivalent Schedules

minimum 2 schedules required so that we can prove that this 2 are conflict equivalent.

Conflicting Operations : RW, WR, WW ( inki sequence matter karti he, if changed position then can result in different output )

Conflicting opn if codn 
1. belong to diff tx
2. they access same database item
3. minimum one write operation

2 schedules are said to be conflict equivalent if order of conflicting operation is same in both.

TODO: IMP: agar ek schedule se dusre schedule me ja sakate he by series of non conflicting swaps.


4. Conflict Serializable 

if it is conflict equivalent to some(atleast one) serial schedule.













